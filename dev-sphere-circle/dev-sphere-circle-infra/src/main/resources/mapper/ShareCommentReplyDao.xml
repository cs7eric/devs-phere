<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cccs7.practice.infra.basic.dao.ShareCommentReplyDao">

    <resultMap type="com.cccs7.practice.infra.basic.entity.ShareCommentReply" id="ShareCommentReplyMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="momentId" column="moment_id" jdbcType="INTEGER"/>
        <result property="replyType" column="reply_type" jdbcType="INTEGER"/>
        <result property="toId" column="to_id" jdbcType="INTEGER"/>
        <result property="toUser" column="to_user" jdbcType="VARCHAR"/>
        <result property="toUserAuthor" column="to_user_author" jdbcType="INTEGER"/>
        <result property="replyId" column="reply_id" jdbcType="INTEGER"/>
        <result property="replyUser" column="reply_user" jdbcType="VARCHAR"/>
        <result property="replayAuthor" column="replay_author" jdbcType="INTEGER"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="picUrls" column="pic_urls" jdbcType="VARCHAR"/>
        <result property="parentId" column="parent_id" jdbcType="INTEGER"/>
        <result property="leafNode" column="leaf_node" jdbcType="VARCHAR"/>
        <result property="children" column="children" jdbcType="VARCHAR"/>
        <result property="rootNode" column="root_node" jdbcType="VARCHAR"/>
        <result property="createdBy" column="created_by" jdbcType="VARCHAR"/>
        <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="isDeleted" column="is_deleted" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="ShareCommentReplyMap">
        select
id, moment_id, reply_type, to_id, to_user, to_user_author, reply_id, reply_user, replay_author, content, pic_urls, parent_id, leaf_node, children, root_node, created_by, created_time, update_by, update_time, is_deleted
        from share_comment_reply
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="ShareCommentReplyMap">
        select
id, moment_id, reply_type, to_id, to_user, to_user_author, reply_id, reply_user, replay_author, content, pic_urls, parent_id, leaf_node, children, root_node, created_by, created_time, update_by, update_time, is_deleted
        from share_comment_reply
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="momentId != null">
                and moment_id = #{momentId}
            </if>
            <if test="replyType != null">
                and reply_type = #{replyType}
            </if>
            <if test="toId != null">
                and to_id = #{toId}
            </if>
            <if test="toUser != null and toUser != ''">
                and to_user = #{toUser}
            </if>
            <if test="toUserAuthor != null">
                and to_user_author = #{toUserAuthor}
            </if>
            <if test="replyId != null">
                and reply_id = #{replyId}
            </if>
            <if test="replyUser != null and replyUser != ''">
                and reply_user = #{replyUser}
            </if>
            <if test="replayAuthor != null">
                and replay_author = #{replayAuthor}
            </if>
            <if test="content != null and content != ''">
                and content = #{content}
            </if>
            <if test="picUrls != null and picUrls != ''">
                and pic_urls = #{picUrls}
            </if>
            <if test="parentId != null">
                and parent_id = #{parentId}
            </if>
            <if test="leafNode != null and leafNode != ''">
                and leaf_node = #{leafNode}
            </if>
            <if test="children != null and children != ''">
                and children = #{children}
            </if>
            <if test="rootNode != null and rootNode != ''">
                and root_node = #{rootNode}
            </if>
            <if test="createdBy != null and createdBy != ''">
                and created_by = #{createdBy}
            </if>
            <if test="createdTime != null">
                and created_time = #{createdTime}
            </if>
            <if test="updateBy != null and updateBy != ''">
                and update_by = #{updateBy}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="isDeleted != null">
                and is_deleted = #{isDeleted}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from share_comment_reply
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="momentId != null">
                and moment_id = #{momentId}
            </if>
            <if test="replyType != null">
                and reply_type = #{replyType}
            </if>
            <if test="toId != null">
                and to_id = #{toId}
            </if>
            <if test="toUser != null and toUser != ''">
                and to_user = #{toUser}
            </if>
            <if test="toUserAuthor != null">
                and to_user_author = #{toUserAuthor}
            </if>
            <if test="replyId != null">
                and reply_id = #{replyId}
            </if>
            <if test="replyUser != null and replyUser != ''">
                and reply_user = #{replyUser}
            </if>
            <if test="replayAuthor != null">
                and replay_author = #{replayAuthor}
            </if>
            <if test="content != null and content != ''">
                and content = #{content}
            </if>
            <if test="picUrls != null and picUrls != ''">
                and pic_urls = #{picUrls}
            </if>
            <if test="parentId != null">
                and parent_id = #{parentId}
            </if>
            <if test="leafNode != null and leafNode != ''">
                and leaf_node = #{leafNode}
            </if>
            <if test="children != null and children != ''">
                and children = #{children}
            </if>
            <if test="rootNode != null and rootNode != ''">
                and root_node = #{rootNode}
            </if>
            <if test="createdBy != null and createdBy != ''">
                and created_by = #{createdBy}
            </if>
            <if test="createdTime != null">
                and created_time = #{createdTime}
            </if>
            <if test="updateBy != null and updateBy != ''">
                and update_by = #{updateBy}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="isDeleted != null">
                and is_deleted = #{isDeleted}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into share_comment_reply(moment_id, reply_type, to_id, to_user, to_user_author, reply_id, reply_user, replay_author, content, pic_urls, leaf_node, children, root_node, created_by, created_time, update_by, update_time, is_deleted)
        values (#{momentId}, #{replyType}, #{toId}, #{toUser}, #{toUserAuthor}, #{replyId}, #{replyUser}, #{replayAuthor}, #{content}, #{picUrls}, #{leafNode}, #{children}, #{rootNode}, #{createdBy}, #{createdTime}, #{updateBy}, #{updateTime}, #{isDeleted})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into share_comment_reply(moment_id, reply_type, to_id, to_user, to_user_author, reply_id, reply_user, replay_author, content, pic_urls, leaf_node, children, root_node, created_by, created_time, update_by, update_time, is_deleted)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.momentId}, #{entity.replyType}, #{entity.toId}, #{entity.toUser}, #{entity.toUserAuthor}, #{entity.replyId}, #{entity.replyUser}, #{entity.replayAuthor}, #{entity.content}, #{entity.picUrls}, #{entity.leafNode}, #{entity.children}, #{entity.rootNode}, #{entity.createdBy}, #{entity.createdTime}, #{entity.updateBy}, #{entity.updateTime}, #{entity.isDeleted})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into share_comment_reply(moment_id, reply_type, to_id, to_user, to_user_author, reply_id, reply_user, replay_author, content, pic_urls, leaf_node, children, root_node, created_by, created_time, update_by, update_time, is_deleted)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.momentId}, #{entity.replyType}, #{entity.toId}, #{entity.toUser}, #{entity.toUserAuthor}, #{entity.replyId}, #{entity.replyUser}, #{entity.replayAuthor}, #{entity.content}, #{entity.picUrls}, #{entity.leafNode}, #{entity.children}, #{entity.rootNode}, #{entity.createdBy}, #{entity.createdTime}, #{entity.updateBy}, #{entity.updateTime}, #{entity.isDeleted})
        </foreach>
        on duplicate key update
moment_id = values(moment_id),
reply_type = values(reply_type),
to_id = values(to_id),
to_user = values(to_user),
to_user_author = values(to_user_author),
reply_id = values(reply_id),
reply_user = values(reply_user),
replay_author = values(replay_author),
content = values(content),
pic_urls = values(pic_urls),
leaf_node = values(leaf_node),
children = values(children),
root_node = values(root_node),
created_by = values(created_by),
created_time = values(created_time),
update_by = values(update_by),
update_time = values(update_time),
is_deleted = values(is_deleted)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update share_comment_reply
        <set>
            <if test="momentId != null">
                moment_id = #{momentId},
            </if>
            <if test="replyType != null">
                reply_type = #{replyType},
            </if>
            <if test="toId != null">
                to_id = #{toId},
            </if>
            <if test="toUser != null and toUser != ''">
                to_user = #{toUser},
            </if>
            <if test="toUserAuthor != null">
                to_user_author = #{toUserAuthor},
            </if>
            <if test="replyId != null">
                reply_id = #{replyId},
            </if>
            <if test="replyUser != null and replyUser != ''">
                reply_user = #{replyUser},
            </if>
            <if test="replayAuthor != null">
                replay_author = #{replayAuthor},
            </if>
            <if test="content != null and content != ''">
                content = #{content},
            </if>
            <if test="picUrls != null and picUrls != ''">
                pic_urls = #{picUrls},
            </if>
            <if test="leafNode != null and leafNode != ''">
                leaf_node = #{leafNode},
            </if>
            <if test="children != null and children != ''">
                children = #{children},
            </if>
            <if test="rootNode != null and rootNode != ''">
                root_node = #{rootNode},
            </if>
            <if test="createdBy != null and createdBy != ''">
                created_by = #{createdBy},
            </if>
            <if test="createdTime != null">
                created_time = #{createdTime},
            </if>
            <if test="updateBy != null and updateBy != ''">
                update_by = #{updateBy},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from share_comment_reply where id = #{id}
    </delete>

</mapper>

